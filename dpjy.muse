* 引入
** 灵梦的灵符
博丽灵梦是东方幻想乡中博丽神社的巫女，她跟幻想乡中最老资格的妖怪八云紫一起维护着隔绝幻想乡与现实世界的大结界，维护现实世界不被幻想乡中的妖怪侵害，幻想乡中的生物也可以自由自在的维持古老的生活方式。但不幸的是，每隔六十年，结界会有一次大异变，为了维护结界的完整，博丽灵梦必须将灵力注入灵符，让灵力以最好的方式游走来修复结界。灵梦的灵符是一个三角形，由一堆数字组成，每个数字表示灵力经过这个位置获得的修复值，三角形共n层，第i层有i个数字，从上方的最尖端注入灵力，灵力只能前往前位置的左下方或者右下方，最终走的下面的边的某个位置释放，问灵梦最多可以获得多少修复值？

** 最容易想到的方法：回溯
列举每一条可能的路线，分别累加比较每条路线的修复值进行比较，取得最大的一条作为答案。我们先不引入时间复杂度的计算，来用一个n较小的例子手工计算我们需要做的计算量。很明显，对于n＝＝4，共有2^(4-1)＝8条不同的路线，如果不考虑回溯时的计算量，每条路线我们要进行两次加法和一次比较，共24次计算。这很小，但是如果n=100呢？n=1000呢？指数级的运算量将会飞快增长，无法接受
** 为什么会计算那么多次呢？
因为这个算法有天然呆的属性，太健忘了，还是n＝＝4的例子，第四层中间2个点的计算，都用到了第3层中间的点，而中间的点又分别来自第2层的两个点，由乘法原理，分别计算了2*2＝＝4次，正是这种乘法原理造成了指数级的计算量，因为不同路线多次经过同一个点，到这个点为止的最大和其实已经算出来了，可以直接用它来与下面路线获得的修复值相加就可以获得最终的最大值，而回溯法在回溯时会重复计算这个值//其实这就是后面要说的最优子结构
** 换一种方法：
如上所说，到第2层中间点的时候，有两种路线，如果取当前和较大的一种路线记录下来，往下走的时候直接用这个数跟下面点的修复值相加，对于每一层都看做一个这样的问题，也就是到当前位置可以获得的最大值，依次类推。到最下面一层时就获得了原问题答案：到最下面某个位置（也就是最后一层子问题的［当前位置］）的最大修复值。这就是动态规划的算法。
** 这样的计算次数
每个点最多会从它上面的两个点走过来，取它们最优值较大的一个，然后加上这个点的值，共进行1次比较和1次加法，（1+4）*4/2-1=9个点，共计算18次，虽然只少了6次，但n增长时与n^2成正比的计算量就可以接受了。
* 动态规划的定义，特点和适用条件
** 正式的定义：
动态规划(dynamic programming)是运筹学的一个分支，是求解决策过程(decision process)最优化的数学方法。20世纪50年代初美国数学家R.E.Bellman等人在研究多阶段决策过程(multistep decision process)的优化问题时，提出了著名的最优化原理(principle of optimality)，把多阶段过程转化为一系列单阶段问题，逐个求解，创立了解决这类过程优化问题的新方法——动态规划。
** 动态规划就是求解可以划分阶段的最优化问题的方法
效率较高,但有一定的局限性,必须可以划分阶段并满足几个条件.而搜索是一般性的方法,DP一般可将搜索指数级的时间复杂度降低到多项式级别.
** 动态规划的适用条件
这个不是一个纯理论的知识,理解这些可以帮助大家看出来这个题题是考用动态规划求解,也可以通过寻找这些要素来确定方程.
*** 最优子结构
决策经历的路径上,如果当前取得了最优值,那么直接用这个值来参与计算后面的状态能使后面的也最优,而不会是这里小规模的状态选择一个不那么优的状态反而会因为限制条件使后面的状态更优.已数字三角形为例:...
*** 无后效性
当前作出决策只会影响后面的状态,不会改变前面的决策,也不会因为前面某些决策而使当前状态能或不能做某个决策,也就是前面的决策的影响都在状态中被包含了,一个状态确定一切,再用来确定后面的状态,有如此一个顺序.例子,比如我加一个限制条件:...
*** 重叠子问题
这个就是说子问题是重叠的,也就是有前所述的那种重复计算的减少,动态规划才能减少算法的运行时间.
** 动态规划的要素
*** 阶段
必须要有一个阶段可以划分,也就是顺序,每个状态属于一个阶段,从而有了前后关系保证最优子结构和无后效性.这种东西在做动态规划题时都比较明显,是前提也是一种特征,容易找到和确定.
*** 状态

*** 决策

